# This is a basic workflow to help you get started with Actions
name: run-tests

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # Build the toml-test suite.
  build-toml-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 'stable'
      - name: Check-out https://github.com/BurntSushi/toml-test
        run: git clone https://github.com/BurntSushi/toml-test.git
      - name: Show version
        working-directory: toml-test
        run: git describe --tags --always
      - name: Build toml-test
        working-directory: toml-test
        run: go build ./cmd/toml-test
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: toml-test
          path: toml-test/toml-test
          retention-days: 2

  test-burntsushi-toml:
    runs-on: ubuntu-latest
    needs: build-toml-test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 'stable'
      - uses: actions/download-artifact@v3
        with:
          name: toml-test
      - name: Check-out https://github.com/BurntSushi/toml
        run: git clone https://github.com/BurntSushi/toml.git burntsushi-toml
      - name: Show version
        working-directory: burntsushi-toml
        run: git describe --tags --always
      - name: Build toml decoder
        working-directory: burntsushi-toml
        run: go build ./cmd/toml-test-decoder
      - name: Test toml decoder
        run: |
          echo "Project: https://github.com/BurntSushi/toml" >> logfile
          echo "Version: $(cd burntsushi-toml; git rev-parse --short HEAD)" >> logfile
          tools/toml-test-wrapper.sh -toml 1.0.0 burntsushi-toml/toml-test-decoder
      - name: Upload artifact
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: log-burntsushi-toml
          path: logfile
          retention-days: 2

  test-python311-tomllib:
    runs-on: ubuntu-latest
    needs: build-toml-test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: actions/download-artifact@v3
        with:
          name: toml-test
      - name: Show Python version
        run: python --version
      - name: Test toml decoder
        run: |
          echo "Project: Python tomllib" >> logfile
          echo "Version: $(python --version)" >> logfile
          tools/toml-test-wrapper.sh -toml 1.0.0 python/tomllib-decoder.py
      - name: Upload artifact
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: log-python311-tomllib
          path: logfile
          retention-days: 2

  test-marzer-tomlplusplus:
    runs-on: ubuntu-latest
    needs: build-toml-test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: toml-test
      - name: Query latest release
        run: echo "version_tag=$(tools/github-latest-release.py marzer/tomlplusplus)" >> $GITHUB_ENV
      - name: Check-out https://github.com/marzer/tomlplusplus
        run: git clone --branch "$version_tag" https://github.com/marzer/tomlplusplus.git
      - name: Show version
        working-directory: tomlplusplus
        run: git describe --tags --always
      - name: Build toml decoder
        working-directory: tomlplusplus
        run: g++ -Iinclude -Wall -Wextra -Wpedantic -Werror -std=c++17 -O2 -fsanitize=undefined -fsanitize=address -o tt_decoder toml-test/tt_decoder.cpp
      - name: Test toml decoder
        run: |
          echo "Project: https://github.com/marzer/tomlplusplus" >> logfile
          echo "Version: ${version_tag}" >> logfile
          tools/toml-test-wrapper.sh -toml 1.0.0 tomlplusplus/tt_decoder
      - name: Upload artifact
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: log-marzer-tomlplusplus
          path: logfile
          retention-days: 2

  test-toml-rs:
    runs-on: ubuntu-latest
    needs: build-toml-test
    steps:
      - uses: actions/checkout@v3
      - name: Cache cargo home directory
        id: cache-cargo
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo
      - uses: actions/download-artifact@v3
        with:
          name: toml-test
      - name: Update cargo dependencies
        working-directory: rust/toml-rs-decoder
        run: |
          cargo update
          cargo fetch
      - name: Show version
        working-directory: rust/toml-rs-decoder
        run: |
          cargo version
          cargo tree
      - name: Build toml decoder
        working-directory: rust/toml-rs-decoder
        run: cargo build
      - name: Test toml decoder
        run: |
          echo "Project: https://crates.io/crates/toml" >> logfile
          echo "Version: $(cd rust/toml-rs-decoder; cargo tree --package toml --depth 0 | cut "-d " -f2)" >> logfile
          tools/toml-test-wrapper.sh -toml 1.0.0 rust/toml-rs-decoder/target/debug/toml-rs-decoder
      - name: Upload artifact
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: log-toml-rs
          path: logfile
          retention-days: 2

  make-summary:
    runs-on: ubuntu-latest
    needs: [test-burntsushi-toml, test-python311-tomllib, test-marzer-tomlplusplus, test-toml-rs]
    if: success() || failure()
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Summarize tests
        run: python3 tools/summarize_test.py log-*/logfile | tee -a $GITHUB_STEP_SUMMARY
